-------------------Списпи---------------------
Создание списка
Чтобы создать список, нужно перечислить его элементы через запятую в квадратных скобках:

numbers = [2, 4, 6, 8, 10]
languages = ['Python', 'C#', 'C++', 'Java']

Значения, заключенные в квадратные скобки и отделенные запятыми, называются элементами списка.
Список может содержать значения разных типов данных:

info = ['Timur', 1992, 61.5]
Список info содержит строковое значение, целое число и число с плавающей точкой.

info[0] == 'Timur';
info[1] == 1992;
info[2] == 61.5.

Обычно элементы списка содержат данные одного типа и на практике редко приходится создавать списки содержащие 
элементы разных типов данных.

----------------Пустой список
Создать пустой список можно двумя способами:
Использовать пустые квадратные скобки [];
Использовать встроенную функцию, которая называется list.

Следующие две строки кода создают пустой список:
mylist = []       # пустой список
mylist = list()   # пустой список

-----------------Вывод списка
Для вывода всего списка можно применить функцию print():
numbers = [2, 4, 6, 8, 10]
languages = ['Python', 'C#', 'C++', 'Java']
print(numbers)
print(languages)

Функция print() выводит на экран элементы списка, в квадратных скобках, разделенные запятыми:
[2, 4, 6, 8, 10]
['Python', 'C#', 'C++', 'Java']

Вывод списка содержит квадратные скобки.


----------------Встроенная функция list
Python имеет встроенную функцию list(), которая помимо создания пустого списка может преобразовывать 
некоторые типы объектов в списки.
Например, мы знаем, что функция range() создает последовательность целых чисел в заданном диапазоне. 

Для преобразования этой последовательности в список, мы пишем следующий код:

numbers = list(range(5))

Во время исполнения этого кода происходит следующее:
-Вызывается функция range(), в которую в качестве аргумента передается число 5;
- Эта функция возвращает последовательность чисел 0, 1, 2, 3, 4;
-Последовательность чисел 0, 1, 2, 3, 4 передается в качестве аргумента в функцию list();
- Функция list() возвращает список [0, 1, 2, 3, 4];
- Список [0, 1, 2, 3, 4] присваивается переменной numbers.

Вот еще один пример:
even_numbers = list(range(0, 10, 2))  # список содержит четные числа 0, 2, 4, 6, 8
odd_numbers = list(range(1, 10, 2))   # список содержит нечетные числа 1, 3, 5, 7, 9

Точно также с помощью функции list() мы можем создать список из символов строки.  Для преобразования строки в 
список мы пишем следующий код:
s = 'abcde'
chars = list(s)  # список содержит символы 'a', 'b', 'c', 'd', 'e'

Во время исполнения этого кода происходит следующее:
Вызывается функция list(), в которую в качестве аргумента передается строка 'abcde';
Функция list() возвращает список ['a', 'b', 'c', 'd', 'e'];
Список ['a', 'b', 'c', 'd', 'e'] присваивается переменной chars.

Элементы массива всегда имеют одинаковый тип данных и располагаются в памяти компьютера непрерывным блоком, 
а элементы списка могут быть разбросаны по памяти как угодно и могут иметь разный тип данных.

